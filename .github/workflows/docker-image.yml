name: Build & Push Docker Image (multiarch, CVE, cache)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: docker.io/nikodemxppp/pogoda-app
  CACHE_REPO: docker.io/nikodemxppp/pogoda-app-cache

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image for scan (amd64, cache, load)
        uses: docker/build-push-action@v5
        with:
          context: ./projekt-pogoda
          platforms: linux/amd64
          load: true
          tags: ${{ env.IMAGE_NAME }}:scan
          cache-from: type=registry,ref=${{ env.CACHE_REPO }}
          cache-to:   type=registry,ref=${{ env.CACHE_REPO }},mode=max

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:scan
          severity: CRITICAL
          exit-code: 1

      - name: Build & push multi-arch image
        if: ${{ success() }}
        uses: docker/build-push-action@v5
        with:
          context: ./projekt-pogoda
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.CACHE_REPO }}
          cache-to:   type=registry,ref=${{ env.CACHE_REPO }},mode=max
